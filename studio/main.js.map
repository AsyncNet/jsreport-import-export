{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"Studio.libraries['react']\"","webpack:///external \"Studio\"","webpack:///./studio/main_dev.js","webpack:///./studio/ExportModal.js","webpack:///external \"Studio.libraries['filesaver.js-npm']\"","webpack:///./studio/ImportModal.js","webpack:///./studio/FileInput.js","webpack:///./studio/FileInput.scss"],"names":["Studio","addToolbarComponent","props","openModal","ExportModal","ImportModal","addEntityTreeContextMenuItemsResolver","node","entity","isRoot","isGroupEntity","getAllEntitiesInHierarchy","items","push","key","title","icon","onClick","__entitySet","selectedFolderShortid","shortid","selected","initialSelected","grouped","entityTreeDropResolvers","type","dragAndDropNativeTypes","FILE","handler","draggedItem","dragOverContext","dropComplete","files","targetInfo","containerTargetEntity","length","test","name","opts","selectedFile","options","selections","references","getExportableReferences","getReferences","Object","keys","forEach","k","e","Array","isArray","s","_id","reduce","acu","handleSelectionChange","bind","exportableEntitySets","extensions","entitySetName","indexOf","api","post","data","selection","responseType","response","fileSaver","saveAs","alert","message","stack","height","overflow","download","Component","EntityRefSelect","ImportFinishedModal","setTimeout","confirmBtn","focus","reset","catch","close","console","error","log","width","boxSizing","el","confirm","state","fullImport","retryWithContinueOnFail","validated","handleImportModeChange","ev","processing","target","value","setState","file","status","params","targetFolder","attach","filename","result","continueOnFail","stateToUpdate","canContinueAfterFail","padding","margin","borderWidth","marginLeft","opacity","verticalAlign","display","paddingLeft","paddingRight","border","marginBottom","maxHeight","minHeight","folders","isGroup","marginTop","validate","cancel","import","FileInput","refs","dispatchEvent","MouseEvent","window","placeholder","onFileSelect","disabled","placeholderText","styles","selectInput","handleOpen","nameLabel","preventDefault","stopPropagation","eventType","bubbles","cancelable","mouseEvent","document","createEvent","initMouseEvent","prototype","Event"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","module.exports = Studio.libraries['react'];","module.exports = Studio;","import ExportModal from './ExportModal.js'\nimport ImportModal from './ImportModal.js'\nimport Studio from 'jsreport-studio'\n\nStudio.addToolbarComponent((props) => (\n  <div className='toolbar-button' onClick={() => Studio.openModal(ExportModal)}>\n    <i className='fa fa-download' /> Export\n  </div>\n), 'settings')\n\nStudio.addToolbarComponent((props) => (\n  <div className='toolbar-button' onClick={() => Studio.openModal(ImportModal)}>\n    <i className='fa fa-upload' /> Import\n  </div>\n), 'settings')\n\nStudio.addEntityTreeContextMenuItemsResolver(({\n  node,\n  entity,\n  isRoot,\n  isGroupEntity,\n  getAllEntitiesInHierarchy\n}) => {\n  const items = []\n\n  if (isRoot) {\n    items.push({\n      key: 'Import',\n      title: 'Import',\n      icon: 'fa-upload',\n      onClick: () => {\n        Studio.openModal(ImportModal)\n      }\n    })\n\n    items.push({\n      key: 'Export',\n      title: 'Export',\n      icon: 'fa-download',\n      onClick: () => {\n        Studio.openModal(ExportModal)\n      }\n    })\n  } else if (isGroupEntity && entity.__entitySet === 'folders') {\n    items.push({\n      key: 'Import',\n      title: 'Import into folder',\n      icon: 'fa-upload',\n      onClick: () => {\n        Studio.openModal(ImportModal, { selectedFolderShortid: entity.shortid })\n      }\n    })\n\n    items.push({\n      key: 'Export',\n      title: 'Export folder',\n      icon: 'fa-download',\n      onClick: () => {\n        const selected = getAllEntitiesInHierarchy(node, true)\n        Studio.openModal(ExportModal, { initialSelected: selected })\n      }\n    })\n  }\n\n  return {\n    grouped: true,\n    items\n  }\n})\n\nStudio.entityTreeDropResolvers.push({\n  type: Studio.dragAndDropNativeTypes.FILE,\n  async handler ({\n    draggedItem,\n    dragOverContext,\n    dropComplete\n  }) {\n    const files = draggedItem.files\n\n    let targetInfo = {\n      shortid: null\n    }\n\n    if (dragOverContext && dragOverContext.containerTargetEntity) {\n      targetInfo.shortid = dragOverContext.containerTargetEntity.shortid\n    }\n\n    if (\n      files &&\n      files.length === 1 &&\n      /\\.zip$/.test(files[0].name)\n    ) {\n      dropComplete()\n\n      let opts = {\n        selectedFile: files[0]\n      }\n\n      if (targetInfo.shortid) {\n        opts.selectedFolderShortid = targetInfo.shortid\n      }\n\n      Studio.openModal(ImportModal, opts)\n    }\n  }\n})\n","import React, {Component} from 'react'\r\nimport Studio, { EntityTree } from 'jsreport-studio'\r\nimport fileSaver from 'filesaver.js-npm'\r\n\r\nexport default class ExportModal extends Component {\r\n  constructor (props) {\r\n    super(props)\r\n\r\n    const { options } = props\r\n\r\n    const selections = {}\r\n\r\n    const references = this.getExportableReferences(Studio.getReferences())\r\n\r\n    Object.keys(references).forEach((k) => {\r\n      Object.keys(references[k]).forEach((e) => {\r\n        if (options.initialSelected != null) {\r\n          const selected = Array.isArray(options.initialSelected) ? options.initialSelected : [options.initialSelected]\r\n\r\n          selected.forEach((s) => {\r\n            if (references[k][e]._id === s) {\r\n              selections[references[k][e]._id] = true\r\n            } else if (selections[references[k][e]._id] == null) {\r\n              selections[references[k][e]._id] = false\r\n            }\r\n          })\r\n        } else {\r\n          selections[references[k][e]._id] = true\r\n        }\r\n      })\r\n    })\r\n\r\n    this.initialSelected = selections\r\n\r\n    this.selected = Object.keys(selections).reduce((acu, key) => {\r\n      if (selections[key] === true) {\r\n        acu.push(key)\r\n      }\r\n\r\n      return acu\r\n    }, [])\r\n\r\n    this.handleSelectionChange = this.handleSelectionChange.bind(this)\r\n  }\r\n\r\n  getExportableReferences (references) {\r\n    const exportableEntitySets = Studio.extensions['import-export'].options.exportableEntitySets\r\n\r\n    return Object.keys(references).reduce((acu, entitySetName) => {\r\n      if (exportableEntitySets.indexOf(entitySetName) !== -1) {\r\n        acu[entitySetName] = references[entitySetName]\r\n      }\r\n\r\n      return acu\r\n    }, {})\r\n  }\r\n\r\n  async download () {\r\n    try {\r\n      let response = await Studio.api.post('api/export', {\r\n        data: {\r\n          selection: this.selected\r\n        },\r\n        responseType: 'blob'\r\n      }, true)\r\n\r\n      fileSaver.saveAs(response, 'export.zip')\r\n    } catch (e) {\r\n      alert('Unable to prepare export ' + e.message + ' ' + e.stack)\r\n    }\r\n  }\r\n\r\n  handleSelectionChange (selected) {\r\n    this.selected = selected\r\n  }\r\n\r\n  render () {\r\n    const references = this.getExportableReferences(Studio.getReferences())\r\n\r\n    return (\r\n      <div className='form-group'>\r\n        <div>\r\n          <h1><i className='fa fa-download' /> Export objects</h1>\r\n        </div>\r\n        <div style={{height: '30rem', overflow: 'auto'}}>\r\n          <EntityTree\r\n            entities={references}\r\n            selectable\r\n            initialSelected={this.initialSelected}\r\n            onSelectionChanged={this.handleSelectionChange}\r\n          />\r\n        </div>\r\n        <div className='button-bar'>\r\n          <a className='button confirmation' onClick={() => this.download()}>\r\n            Download\r\n          </a>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","module.exports = Studio.libraries['filesaver.js-npm'];","import React, {Component} from 'react'\nimport FileInput from './FileInput'\nimport Studio from 'jsreport-studio'\n\nconst EntityRefSelect = Studio.EntityRefSelect\n\nclass ImportFinishedModal extends Component {\n  componentDidMount () {\n    setTimeout(() => this.confirmBtn.focus(), 0)\n  }\n\n  componentWillUnmount () {\n    Studio.reset().catch(() => {})\n  }\n\n  confirm () {\n    this.props.close()\n\n    Studio.reset().catch((e) => { console.error(e) })\n  }\n\n  render () {\n    const { log } = this.props.options\n\n    return (\n      <div>\n        <h1><i className='fa fa-info-circle' /> Import finished</h1>\n        {log != null && log !== '' && (\n          <div className='form-group'>\n            <div>\n              <i>Some errors/warnings happened during the import:</i>\n            </div>\n            <textarea style={{width: '100%', boxSizing: 'border-box'}} rows='10' readOnly value={log} />\n          </div>\n        )}\n        <div className='form-group'>\n          <i>Now we need to reload the studio..</i>\n        </div>\n        <div className='button-bar'>\n          <button ref={(el) => { this.confirmBtn = el }} className='button confirmation' onClick={() => this.confirm()}>\n            Ok\n          </button>\n        </div>\n      </div>\n    )\n  }\n}\n\nclass ImportModal extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      selectedFolderShortid: props.options != null && props.options.selectedFolderShortid ? props.options.selectedFolderShortid : null,\n      fullImport: false,\n      retryWithContinueOnFail: false,\n      validated: false\n    }\n\n    if (props.options && props.options.selectedFile) {\n      this.state.selectedFile = props.options.selectedFile\n    }\n\n    this.handleImportModeChange = this.handleImportModeChange.bind(this)\n  }\n\n  handleImportModeChange (ev) {\n    if (this.state.processing === true || this.state.validated) {\n      return\n    }\n\n    let fullImport = false\n\n    if (ev.target.value === 'full') {\n      fullImport = true\n    }\n\n    this.setState({\n      fullImport\n    })\n  }\n\n  async validate (file) {\n    if (!file || this.state.processing) {\n      return\n    }\n\n    this.setState({\n      status: '1',\n      processing: true,\n      log: 'Validating import....'\n    })\n\n    try {\n      const result = await Studio.api.post('api/validate-import', {\n        params: {\n          fullImport: this.state.fullImport,\n          targetFolder: this.state.selectedFolderShortid\n        },\n        attach: { filename: 'import.zip', file }\n      }, true)\n\n      this.setState({\n        validated: true,\n        status: result.status,\n        processing: false,\n        log: result.log\n      })\n    } catch (e) {\n      this.setState({\n        validated: true,\n        status: '1',\n        processing: false,\n        log: e.message + ' ' + e.stack\n      })\n    }\n  }\n\n  async import () {\n    if (this.state.processing) {\n      return\n    }\n\n    const { retryWithContinueOnFail } = this.state\n\n    try {\n      this.setState({\n        status: '1',\n        processing: true,\n        log: 'Working on import....'\n      })\n\n      const result = await Studio.api.post('api/import', {\n        params: {\n          fullImport: this.state.fullImport,\n          continueOnFail: retryWithContinueOnFail,\n          targetFolder: this.state.selectedFolderShortid\n        },\n        attach: { filename: 'import.zip', file: this.state.selectedFile }\n      }, true)\n\n      this.setState({\n        processing: false,\n        retryWithContinueOnFail: false\n      })\n\n      Studio.openModal(ImportFinishedModal, {\n        log: result.log\n      })\n    } catch (e) {\n      const stateToUpdate = {\n        status: '1',\n        processing: false,\n        log: e.message + ' ' + e.stack\n      }\n\n      if (!retryWithContinueOnFail && e.canContinueAfterFail) {\n        stateToUpdate.retryWithContinueOnFail = true\n      } else {\n        stateToUpdate.retryWithContinueOnFail = false\n      }\n\n      this.setState(stateToUpdate)\n    }\n  }\n\n  cancel () {\n    this.setState({\n      status: null,\n      log: null,\n      retryWithContinueOnFail: false,\n      validated: false\n    })\n  }\n\n  render () {\n    return (\n      <div>\n        <h1><i className='fa fa-upload' /> Import objects</h1>\n        <div className='form-group'>\n          <p>\n            A <b>validation is run first</b>, so you can safely upload the exported package and review the changes which will be performed. Afterwards <b>you can confirm or cancel the import</b>.\n          </p>\n        </div>\n        <div className='form-group'>\n          <FileInput\n            placeholder='select export file to import...'\n            selectedFile={this.state.selectedFile}\n            onFileSelect={(file) => this.setState({ selectedFile: file })}\n            disabled={this.state.processing === true || this.state.validated}\n          />\n        </div>\n        <div className='form-group'>\n          <fieldset style={{ padding: '0px', margin: '0px', borderWidth: '1px' }}>\n            <legend style={{ marginLeft: '0.2rem' }}>Options</legend>\n            <div className='form-group'>\n              <div style={{ opacity: (this.state.processing === true || this.state.validated) ? 0.7 : 1 }}>\n                <label>\n                  <input\n                    type='radio'\n                    name='import-mode'\n                    value='merge'\n                    style={{ verticalAlign: 'middle', margin: '0px' }}\n                    checked={!this.state.fullImport}\n                    onChange={this.handleImportModeChange}\n                  />\n                  <span style={{ display: 'inline-block', verticalAlign: 'middle', paddingLeft: '0.2rem', paddingRight: '0.5rem' }}>Merge</span>\n                </label>\n                <label>\n                  <input\n                    type='radio'\n                    name='import-mode'\n                    value='full'\n                    style={{ verticalAlign: 'middle', margin: '0px' }}\n                    checked={this.state.fullImport}\n                    onChange={this.handleImportModeChange}\n                  />\n                  <span style={{ display: 'inline-block', verticalAlign: 'middle', paddingLeft: '0.2rem', paddingRight: '0.5rem' }}>Full</span>\n                </label>\n              </div>\n            </div>\n            <div className='form-group'>\n              <div style={{\n                display: !this.state.fullImport ? 'block' : 'none',\n                border: '1px dashed black',\n                padding: '0.6rem',\n                opacity: (this.state.processing === true || this.state.validated) ? 0.7 : 1\n              }}>\n                <label style={{ display: 'inline-block', marginBottom: '5px' }}>\n                  <b>Optionally</b> you can select a folder in which the entities  will be inserted\n                </label>\n                <div style={{ maxHeight: '20rem', overflow: 'auto' }}>\n                  <EntityRefSelect\n                    noModal\n                    allowNewFolder\n                    treeStyle={{ minHeight: 'auto', maxHeight: 'none' }}\n                    headingLabel='Select folder'\n                    filter={(references) => ({ folders: references.folders })}\n                    selectableFilter={(isGroup, entity) => entity.__entitySet === 'folders'}\n                    value={this.state.selectedFolderShortid}\n                    disabled={this.state.processing === true || this.state.validated}\n                    onChange={(selected) => {\n                      this.setState({\n                        selectedFolderShortid: selected.length > 0 ? selected[0].shortid : null\n                      })\n                    }}\n                  />\n                </div>\n              </div>\n              {this.state.fullImport && (\n                <p style={{ marginTop: '10px' }}>\n                  A <b>full import</b> means that <b>all the entities that are not present in the export file will be deleted</b>, after the import <b>you will have only the entities that were present in the export file</b>.\n                </p>\n              )}\n            </div>\n          </fieldset>\n        </div>\n        <div className='form-group'>\n          {!this.state.validated && (\n            <div className='button-bar'>\n              <button\n                className='button confirmation'\n                style={{ opacity: this.state.selectedFile == null ? 0.7 : 1 }}\n                disabled={this.state.selectedFile == null}\n                onClick={() => this.validate(this.state.selectedFile)}\n              >\n                Validate\n              </button>\n            </div>\n          )}\n          <br />\n          {this.state.validated && (\n            <div>\n              <div>\n                <i>Log of changes with the import:</i>\n              </div>\n              <textarea style={{width: '100%', boxSizing: 'border-box'}} rows='10' readOnly value={this.state.log} />\n            </div>\n          )}\n          {this.state.validated && (\n            <div className='button-bar'>\n              <button className='button danger' onClick={() => this.cancel()}>\n                Cancel\n              </button>\n              {(this.state.status === '0' || this.state.retryWithContinueOnFail) && (\n                <button className='button confirmation' onClick={() => this.import()}>\n                  {this.state.retryWithContinueOnFail ? 'Ignore errors and continue' : 'Import'}\n                </button>\n              )}\n            </div>\n          )}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default ImportModal\n","import React, { Component } from 'react'\nimport styles from './FileInput.scss'\n\nclass FileInput extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {}\n  }\n\n  handleOpen () {\n    this.refs.file.dispatchEvent(new MouseEvent('click', {\n      'view': window,\n      'bubbles': false,\n      'cancelable': true\n    }))\n  }\n\n  render () {\n    const { placeholder, selectedFile, onFileSelect, disabled } = this.props\n\n    let placeholderText\n\n    if (placeholder) {\n      placeholderText = placeholder\n    } else {\n      placeholderText = 'select file...'\n    }\n\n    return (\n      <div\n        className={styles.selectInput} onClick={() => !disabled && this.handleOpen()}\n        style={{ opacity: disabled ? 0.7 : 1 }}\n      >\n        <i className='fa fa-upload' />\n        <span\n          title={placeholderText}\n          className={styles.nameLabel}\n          onClick={(e) => {\n            e.preventDefault()\n            e.stopPropagation()\n\n            if (!disabled) {\n              this.handleOpen()\n            }\n          }}\n        >\n          {selectedFile ? selectedFile.name : placeholderText}\n        </span>\n        <input\n          type='file'\n          key='file'\n          ref='file'\n          style={{ display: 'none' }}\n          onChange={(e) => {\n            if (!e.target.files.length) {\n              return\n            }\n\n            onFileSelect(e.target.files[0])\n          }}\n        />\n      </div>\n    )\n  }\n}\n\n(function (window) {\n  try {\n    new MouseEvent('test')  // eslint-disable-line\n    return false // No need to polyfill\n  } catch (e) {\n    // Need to polyfill - fall through\n  }\n\n  // Polyfills DOM4 MouseEvent\n\n  var MouseEvent = function (eventType, params) {\n    params = params || { bubbles: false, cancelable: false }\n    var mouseEvent = document.createEvent('MouseEvent')\n    mouseEvent.initMouseEvent(eventType, params.bubbles, params.cancelable, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null)\n\n    return mouseEvent\n  }\n\n  MouseEvent.prototype = Event.prototype\n\n  window.MouseEvent = MouseEvent\n})(window)\n\nexport default FileInput\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectInput\":\"x-import-export-FileInput-selectInput\",\"link\":\"x-import-export-FileInput-link\",\"nameLabel\":\"x-import-export-FileInput-nameLabel\"};"],"sourceRoot":""}