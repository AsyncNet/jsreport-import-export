{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"Studio\"","webpack:///external \"Studio.libraries['react']\"","webpack:///./studio/main_dev.js","webpack:///./studio/ExportModal.js","webpack:///external \"Studio.libraries['filesaver.js-npm']\"","webpack:///./studio/ImportModal.js"],"names":["Studio","addToolbarComponent","props","openModal","ExportModal","ImportModal","addEntityTreeContextMenuItemsResolver","node","entity","isRoot","isGroupEntity","getAllEntitiesInHierarchy","items","push","key","title","icon","onClick","__entitySet","selectedFolderShortid","shortid","selected","initialSelected","grouped","entityTreeDropResolvers","type","dragAndDropNativeTypes","FILE","handler","draggedItem","dragOverContext","dropComplete","files","targetInfo","containerTargetEntity","length","opts","selectedFile","options","selections","references","getExportableReferences","getReferences","Object","keys","forEach","k","e","Array","isArray","s","_id","setState","exportableEntitySets","extensions","reduce","acu","entitySetName","indexOf","es","v","updates","api","post","data","selection","state","filter","responseType","response","fileSaver","saveAs","alert","message","stack","assign","__selected","height","overflow","getActiveEntity","handleNodeSelect","download","Component","EntityRefSelect","ImportFinishedModal","setTimeout","confirmBtn","focus","reset","catch","close","console","error","log","width","boxSizing","el","confirm","fullImport","continueOnFail","validated","upload","file","status","processing","reader","FileReader","onloadend","refs","value","params","targetFolder","attach","filename","result","onerror","readAsArrayBuffer","dispatchEvent","MouseEvent","window","display","target","opacity","verticalAlign","checked","marginTop","border","padding","folders","isGroup","openFileDialog","cancel","import","eventType","bubbles","cancelable","mouseEvent","document","createEvent","initMouseEvent","prototype","Event"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","module.exports = Studio;","module.exports = Studio.libraries['react'];","import ExportModal from './ExportModal.js'\nimport ImportModal from './ImportModal.js'\nimport Studio from 'jsreport-studio'\n\nStudio.addToolbarComponent((props) => (\n  <div className='toolbar-button' onClick={() => Studio.openModal(ExportModal)}>\n    <i className='fa fa-download' /> Export\n  </div>\n), 'settings')\n\nStudio.addToolbarComponent((props) => (\n  <div className='toolbar-button' onClick={() => Studio.openModal(ImportModal)}>\n    <i className='fa fa-upload' /> Import\n  </div>\n), 'settings')\n\nStudio.addEntityTreeContextMenuItemsResolver(({\n  node,\n  entity,\n  isRoot,\n  isGroupEntity,\n  getAllEntitiesInHierarchy\n}) => {\n  const items = []\n\n  if (isRoot) {\n    items.push({\n      key: 'Import',\n      title: 'Import',\n      icon: 'fa-upload',\n      onClick: () => {\n        Studio.openModal(ImportModal)\n      }\n    })\n\n    items.push({\n      key: 'Export',\n      title: 'Export',\n      icon: 'fa-download',\n      onClick: () => {\n        Studio.openModal(ExportModal)\n      }\n    })\n  } else if (isGroupEntity && entity.__entitySet === 'folders') {\n    items.push({\n      key: 'Import',\n      title: 'Import into folder',\n      icon: 'fa-upload',\n      onClick: () => {\n        Studio.openModal(ImportModal, { selectedFolderShortid: entity.shortid })\n      }\n    })\n\n    items.push({\n      key: 'Export',\n      title: 'Export folder',\n      icon: 'fa-download',\n      onClick: () => {\n        const selected = getAllEntitiesInHierarchy(node, true)\n        Studio.openModal(ExportModal, { initialSelected: selected })\n      }\n    })\n  }\n\n  return {\n    grouped: true,\n    items\n  }\n})\n\nStudio.entityTreeDropResolvers.push({\n  type: Studio.dragAndDropNativeTypes.FILE,\n  async handler ({\n    draggedItem,\n    dragOverContext,\n    dropComplete\n  }) {\n    const files = draggedItem.files\n\n    let targetInfo = {\n      shortid: null\n    }\n\n    if (dragOverContext && dragOverContext.containerTargetEntity) {\n      targetInfo.shortid = dragOverContext.containerTargetEntity.shortid\n    }\n\n    if (\n      files &&\n      files.length === 1 &&\n      files[0].type === 'application/zip'\n    ) {\n      dropComplete()\n\n      let opts = {\n        selectedFile: files[0]\n      }\n\n      if (targetInfo.shortid) {\n        opts.selectedFolderShortid = targetInfo.shortid\n      }\n\n      Studio.openModal(ImportModal, opts)\n    }\n  }\n})\n","import React, {Component} from 'react'\r\nimport Studio, { EntityTree } from 'jsreport-studio'\r\nimport fileSaver from 'filesaver.js-npm'\r\n\r\nexport default class ExportModal extends Component {\r\n  componentWillMount () {\r\n    const { options } = this.props\r\n    let selections = {}\r\n\r\n    const references = this.getExportableReferences(Studio.getReferences())\r\n\r\n    Object.keys(references).forEach((k) => {\r\n      Object.keys(references[k]).forEach((e) => {\r\n        if (options.initialSelected != null) {\r\n          const selected = Array.isArray(options.initialSelected) ? options.initialSelected : [options.initialSelected]\r\n\r\n          selected.forEach((s) => {\r\n            if (references[k][e]._id === s) {\r\n              selections[references[k][e]._id] = true\r\n            } else if (selections[references[k][e]._id] == null) {\r\n              selections[references[k][e]._id] = false\r\n            }\r\n          })\r\n        } else {\r\n          selections[references[k][e]._id] = true\r\n        }\r\n      })\r\n    })\r\n\r\n    this.setState(selections)\r\n  }\r\n\r\n  getExportableReferences (references) {\r\n    const exportableEntitySets = Studio.extensions['import-export'].options.exportableEntitySets\r\n\r\n    return Object.keys(references).reduce((acu, entitySetName) => {\r\n      if (exportableEntitySets.indexOf(entitySetName) !== -1) {\r\n        acu[entitySetName] = references[entitySetName]\r\n      }\r\n\r\n      return acu\r\n    }, {})\r\n  }\r\n\r\n  handleNodeSelect (references, es, v) {\r\n    let updates = {}\r\n\r\n    if (Array.isArray(es)) {\r\n      es.forEach((_id) => {\r\n        updates[_id] = v\r\n      })\r\n    } else {\r\n      references[es].forEach((e) => {\r\n        updates[e._id] = v\r\n      })\r\n    }\r\n\r\n    this.setState(updates)\r\n  }\r\n\r\n  async download () {\r\n    try {\r\n      let response = await Studio.api.post('api/export', {\r\n        data: {\r\n          selection: Object.keys(this.state).filter((k) => this.state[k])\r\n        },\r\n        responseType: 'blob'\r\n      }, true)\r\n\r\n      fileSaver.saveAs(response, 'export.zip')\r\n    } catch (e) {\r\n      alert('Unable to prepare export ' + e.message + ' ' + e.stack)\r\n    }\r\n  }\r\n\r\n  render () {\r\n    const references = this.getExportableReferences(Studio.getReferences())\r\n\r\n    Object.keys(references).forEach((k) => {\r\n      Object.keys(references[k]).forEach((e) => (references[k][e] = Object.assign({}, references[k][e], { __selected: this.state[references[k][e]._id] })))\r\n    })\r\n\r\n    return (\r\n      <div className='form-group'>\r\n        <div>\r\n          <h1><i className='fa fa-download' /> Export objects</h1>\r\n        </div>\r\n        <div style={{height: '30rem', overflow: 'auto'}}>\r\n          <EntityTree\r\n            activeEntity={Studio.getActiveEntity()}\r\n            entities={references}\r\n            selectable\r\n            onNodeSelect={(es, v) => this.handleNodeSelect(references, es, v)}\r\n            onSelect={(e, v) => this.setState({ [e._id]: !this.state[e._id] })}\r\n          />\r\n        </div>\r\n        <div className='button-bar'>\r\n          <a className='button confirmation' onClick={() => this.download()}>\r\n            Download\r\n          </a>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","module.exports = Studio.libraries['filesaver.js-npm'];","import React, {Component} from 'react'\nimport Studio from 'jsreport-studio'\n\nconst EntityRefSelect = Studio.EntityRefSelect\n\nclass ImportFinishedModal extends Component {\n  componentDidMount () {\n    setTimeout(() => this.confirmBtn.focus(), 0)\n  }\n\n  componentWillUnmount () {\n    Studio.reset().catch(() => {})\n  }\n\n  confirm () {\n    this.props.close()\n\n    Studio.reset().catch((e) => { console.error(e) })\n  }\n\n  render () {\n    const { log } = this.props.options\n\n    return (\n      <div>\n        <h1><i className='fa fa-info-circle' /> Import finished</h1>\n        {log != null && log !== '' && (\n          <div className='form-group'>\n            <div>\n              <i>Some errors/warnings happened during the import:</i>\n            </div>\n            <textarea style={{width: '100%', boxSizing: 'border-box'}} rows='10' readOnly value={log} />\n          </div>\n        )}\n        <div className='form-group'>\n          <i>Now we need to reload the studio..</i>\n        </div>\n        <div className='button-bar'>\n          <button ref={(el) => { this.confirmBtn = el }} className='button confirmation' onClick={() => this.confirm()}>\n            Ok\n          </button>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default class ImportModal extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      selectedFolderShortid: props.options != null && props.options.selectedFolderShortid ? props.options.selectedFolderShortid : null,\n      fullImport: false,\n      continueOnFail: false,\n      validated: false\n    }\n\n    if (props.options && props.options.selectedFile) {\n      this.upload(props.options.selectedFile)\n    }\n  }\n\n  upload (file) {\n    if (!file) {\n      return\n    }\n\n    this.setState({\n      status: '1',\n      processing: true,\n      log: 'Validating import....'\n    })\n\n    this.file = file\n    const reader = new FileReader()\n\n    reader.onloadend = async () => {\n      this.refs.file.value = ''\n\n      try {\n        const result = await Studio.api.post('api/validate-import', {\n          params: {\n            fullImport: this.state.fullImport,\n            targetFolder: this.state.selectedFolderShortid\n          },\n          attach: { filename: 'import.zip', file: this.file }\n        }, true)\n\n        this.setState({\n          validated: true,\n          status: result.status,\n          processing: false,\n          log: result.log\n        })\n      } catch (e) {\n        this.setState({\n          validated: true,\n          status: '1',\n          processing: false,\n          log: e.message + ' ' + e.stack\n        })\n      }\n    }\n\n    reader.onerror = function () {\n      alert('There was an error reading the file!')\n    }\n\n    reader.readAsArrayBuffer(this.file)\n  }\n\n  async import () {\n    try {\n      this.setState({\n        status: '1',\n        processing: true,\n        log: 'Working on import....'\n      })\n\n      const result = await Studio.api.post('api/import', {\n        params: {\n          fullImport: this.state.fullImport,\n          continueOnFail: this.state.continueOnFail,\n          targetFolder: this.state.selectedFolderShortid\n        },\n        attach: { filename: 'import.zip', file: this.file }\n      }, true)\n\n      Studio.openModal(ImportFinishedModal, {\n        log: result.log\n      })\n    } catch (e) {\n      this.setState({\n        status: '1',\n        processing: false,\n        log: e.message + ' ' + e.stack\n      })\n    }\n  }\n\n  cancel () {\n    this.setState({\n      validated: false\n    })\n  }\n\n  openFileDialog () {\n    this.refs.file.dispatchEvent(new MouseEvent('click', {\n      'view': window,\n      'bubbles': false,\n      'cancelable': true\n    }))\n  }\n\n  render () {\n    return (\n      <div>\n        <input\n          type='file'\n          key='file'\n          ref='file'\n          style={{display: 'none'}}\n          onChange={(e) => {\n            if (!e.target.files.length) {\n              return\n            }\n\n            this.upload(e.target.files[0])\n          }}\n        />\n\n        <h1><i className='fa fa-upload' /> Import objects</h1>\n\n        <div className='form-group'>\n          <p>\n            A <b>validation is run first</b>, so you can safely upload the exported package and review the changes which will be performed. Afterwards <b>you can confirm or cancel the import</b>.\n          </p>\n        </div>\n        <div className='form-group'>\n          <div>\n            <label style={{ opacity: (this.state.processing === true || this.state.validated) ? 0.7 : 1 }}>\n              <input\n                type='checkbox'\n                style={{ verticalAlign: 'middle' }}\n                disabled={this.state.processing === true || this.state.validated}\n                onChange={(e) => {\n                  this.setState({\n                    fullImport: e.target.checked\n                  })\n                }}\n              />\n              <span style={{ verticalAlign: 'middle' }}>Full Import</span>\n            </label>\n          </div>\n          {this.state.fullImport && (\n            <p style={{ marginTop: '10px' }}>\n              A <b>full import</b> means that <b>all the entities that are not present in the zip will be deleted</b>, after the import <b>you will have only the entities that were present in the zip</b>.\n            </p>\n          )}\n        </div>\n        <div className='form-group'>\n          <div style={{\n            display: !this.state.fullImport ? 'block' : 'none',\n            border: '1px dashed black',\n            padding: '0.6rem',\n            opacity: (this.state.processing === true || this.state.validated) ? 0.7 : 1\n          }}>\n            <label>You can <b>optionally</b> select a folder in which the entities  will be inserted</label>\n            <EntityRefSelect\n              noModal\n              allowNewFolder\n              treeStyle={{ height: '12rem' }}\n              headingLabel='Select folder'\n              filter={(references) => ({ folders: references.folders })}\n              selectableFilter={(isGroup, entity) => entity.__entitySet === 'folders'}\n              value={this.state.selectedFolderShortid}\n              disabled={this.state.processing === true || this.state.validated}\n              onChange={(selected) => {\n                this.setState({\n                  selectedFolderShortid: selected.length > 0 ? selected[0].shortid : null\n                })\n              }}\n            />\n          </div>\n          <div>\n            <label style={{ opacity: (this.state.processing === true || this.state.validated) ? 0.7 : 1 }}>\n              <input\n                type='checkbox'\n                style={{ verticalAlign: 'middle' }}\n                disabled={this.state.processing === true || this.state.validated}\n                onChange={(e) => {\n                  this.setState({\n                    continueOnFail: e.target.checked\n                  })\n                }}\n              />\n              <span style={{ verticalAlign: 'middle' }}>Continue import on fail</span>\n            </label>\n            {this.state.continueOnFail && (\n              <p style={{ marginTop: '10px' }}>\n                <b>Continue import on fail</b> means that <b>the import will try to process all the entities in the zip, even if there is some of them that causes conflicts</b>, import is transactional operation by default but when this option is enabled it allows the importing to ignore some errors and continue processing.\n              </p>\n            )}\n          </div>\n          {!this.state.validated && (\n            <div className='button-bar'>\n              <a className='button confirmation' onClick={() => this.openFileDialog()}>\n                Validate\n              </a>\n            </div>\n          )}\n          <br />\n          {this.state.validated && (\n            <div>\n              <div>\n                <i>Log of changes with the import:</i>\n              </div>\n              <textarea style={{width: '100%', boxSizing: 'border-box'}} rows='10' readOnly value={this.state.log} />\n            </div>\n          )}\n          {this.state.validated && this.state.status === '0' && (\n            <div className='button-bar'>\n              <a className='button danger' onClick={() => this.cancel()}>\n                Cancel\n              </a>\n              <a className='button confirmation' onClick={() => this.import()}>\n                Import\n              </a>\n            </div>\n          )}\n        </div>\n      </div>\n    )\n  }\n}\n\n(function (window) {\n  try {\n    new MouseEvent('test')  // eslint-disable-line\n    return false // No need to polyfill\n  } catch (e) {\n    // Need to polyfill - fall through\n  }\n\n  // Polyfills DOM4 MouseEvent\n\n  var MouseEvent = function (eventType, params) {\n    params = params || { bubbles: false, cancelable: false }\n    var mouseEvent = document.createEvent('MouseEvent')\n    mouseEvent.initMouseEvent(eventType, params.bubbles, params.cancelable, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null)\n\n    return mouseEvent\n  }\n\n  MouseEvent.prototype = Event.prototype\n\n  window.MouseEvent = MouseEvent\n})(window)\n"],"sourceRoot":""}